diff --git a/node_modules/@strapi/strapi/lib/services/entity-service/components.js b/node_modules/@strapi/strapi/lib/services/entity-service/components.js
index dbde6f9..8e9fe58 100644
--- a/node_modules/@strapi/strapi/lib/services/entity-service/components.js
+++ b/node_modules/@strapi/strapi/lib/services/entity-service/components.js
@@ -43,9 +43,12 @@ const createComponents = async (uid, data) => {
           throw new Error('Expected an array to create repeatable component');
         }
 
-        const components = await Promise.all(
-          componentValue.map((value) => createComponent(componentUID, value))
-        );
+        // No Promise.all to avoid deadlocks
+        const components = [];
+        for (const value of componentValue) {
+          const compo = await createComponent(componentUID, value);
+          components.push(compo);
+        }
 
         componentBody[attributeName] = components.map(({ id }) => {
           return {
@@ -137,9 +140,12 @@ const updateComponents = async (uid, entityToUpdate, data) => {
           throw new Error('Expected an array to create repeatable component');
         }
 
-        const components = await Promise.all(
-          componentValue.map((value) => updateOrCreateComponent(componentUID, value))
-        );
+        // No Promise.all to avoid deadlocks
+        const components = [];
+        for (const value of componentValue) {
+          const compo = await updateOrCreateComponent(componentUID, value);
+          components.push(compo);
+        }
 
         componentBody[attributeName] = components.filter(_.negate(_.isNil)).map(({ id }) => {
           return {
